import java.io.*;
import java.math.BigInteger;
import java.util.*;
import java.lang.*;
import static java.lang.Math.*;

// Sachin_2961 submission //
public class Codeforces {

    static void solve(){
        int n = fs.nInt();
        int[]ar = new int[n];
        for(int i=0;i<n;i++)
            ar[i] = fs.nInt();

        Arrays.sort(ar);
        long d = ar[0];
        long ans = ar[0];
        for(int i=1;i<n;i++){

            if( ar[i] - d < ans ){
                break;
            }
            ans = ar[i] - d;
            d = d + (ar[i] - d);
        }
        out.println(ans);
    }
    
    static class Pair{
        int f,s;
        Pair(int f,int s){
            this.f = f;
            this.s = s;
        }
    }
    static boolean multipleTestCase = true;
    static FastScanner fs;
    static PrintWriter out;
    public static void main(String[]args){
       try{
           out = new PrintWriter(System.out);
           fs = new FastScanner();
           int tc = multipleTestCase?fs.nInt():1;
           while (tc-->0)solve();
           out.flush();
           out.close();
       }catch (Exception e){
           e.printStackTrace();
       }
    }
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        String n() {
            while (!st.hasMoreTokens())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        String Line()
        {
            String str = "";
            try
            {
                str = br.readLine();
            }catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        int nInt() {return Integer.parseInt(n()); }
        long nLong() {return Long.parseLong(n());}
        double nDouble(){return Double.parseDouble(n());}
        int[]aI(int n){
            int[]ar = new int[n];
            for(int i=0;i<n;i++)
                ar[i] = nInt();
            return ar;
        }
    }
    public static void sort(int[] arr){
        ArrayList<Integer> ls = new ArrayList<Integer>();
        for(int x: arr)
            ls.add(x);
        Collections.sort(ls);
        for(int i=0; i < arr.length; i++)
            arr[i] = ls.get(i);
    }
    public static void sort(long[] arr){
        ArrayList<Long> ls = new ArrayList<>();
        for(long x: arr)
            ls.add(x);
        Collections.sort(ls);
        for(int i=0; i < arr.length; i++)
            arr[i] = ls.get(i);
    }
}
