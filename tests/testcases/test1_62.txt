// package MyPackage;

import java.util.*;
import java.io.*;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
        public FastReader(){
            br=new BufferedReader(new InputStreamReader(System.in));
        }
        String next(){
            while(st==null || !st.hasMoreTokens()){
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        int nextInt(){
            return Integer.parseInt(next());
        }
        long nextLong(){
            return Long.parseLong(next());
        }
        double nextDouble(){
            return Double.parseDouble(next());
        }
        String nextLine(){
            String str="";
            try {
                str=br.readLine().trim();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return str;
        }
    }
    static class FastWriter {
		private final BufferedWriter bw;

		public FastWriter() {
			this.bw = new BufferedWriter(new OutputStreamWriter(System.out));
		}

		public void print(Object object) throws IOException {
			bw.append("" + object);
		}

		public void println(Object object) throws IOException {
			print(object);
			bw.append("\n");
		}

		public void close() throws IOException {
			bw.close();
		}
	}
    public static void main(String[] args)
    {
        try {
            FastReader in=new FastReader();
            FastWriter out = new FastWriter();
            StringBuilder sb = new StringBuilder();
            int testCases=in.nextInt();
            while(testCases-- > 0) {
                // write code here
            	int n = in.nextInt();
            	ArrayList<Long> a = new ArrayList<>();
            	for(int i = 0; i < n; i++)
            	{
            		a.add(in.nextLong());
            	}
            	long ans = 0;
            	if(a.size() == 1)
            		ans = a.get(0);
            	else
            	{
	            	Collections.sort(a);
	            	long min = 0;
	            	while(a.size() > 1)
	            	{
	            		min = a.remove(0);
		            	for(int i = 0; i < a.size() ; i++)
		            	{
		            		long val = a.get(i);
		            		val = val - min;
		            		a.set(i, val);
		            	}
	            	}
	            	ans = Math.max(min, a.get(0));
            	}
        		sb.append(ans + "\n");
            }
            out.println(sb);
            out.close();
        } catch (Exception e) {
            return;
        }
    }
}

